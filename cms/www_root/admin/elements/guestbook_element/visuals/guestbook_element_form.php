<?php	// No direct access	defined('_ACCESS') or die;		require_once "core/visual/element_visual.php";	require_once "core/visual/information_message.php";	require_once "libraries/system/template_engine.php";	require_once "dao/guestbook_dao.php";	class GuestBookElementForm extends ElementVisual {			private static $TEMPLATE = "elements/guestbook_element_form.tpl";				private $_template_engine;		private $_guestbook_element;		private $_guestbook_dao;			public function __construct($_guestbook_element) {			$this->_template_engine = TemplateEngine::getInstance();			$this->_guestbook_dao = GuestBookDao::getInstance();			$this->_guestbook_element = $_guestbook_element;		}			public function getElement() {			return $this->_guestbook_element;		}				public function renderElementForm() {			$select_field_id = "element_" . $this->_guestbook_element->getId() . "_guestbook";			$options = $this->getOptions();			$select_field = new Pulldown($select_field_id, "Selecteer gastenboek", $this->getSelectedGuestBook(), $options, false, "guestbook_selector");						$this->_template_engine->assign("guestbooks_count", count($options));			$this->_template_engine->assign("select_field", $select_field->render());			return $this->_template_engine->fetch(self::$TEMPLATE);		}				private function getOptions() {			$guestbooks = $this->_guestbook_dao->getAllGuestBooks();			$guestbooks_options = array();			array_push($guestbooks_options, array('name' => '&gt; Selecteer', 'value' => NULL));			foreach ($guestbooks as $guestbook) {				array_push($guestbooks_options, array('name' => $guestbook->getTitle(), 'value' => $guestbook->getId()));			}			return $guestbooks_options;		}				private function getSelectedGuestBook() {			$current_guestbook_id = null;			if (!is_null($this->_guestbook_element->getGuestBookId())) {				$current_guestbook_id = $element->getGuestBookId();			}			return $current_guestbook_id;		}		}	?>